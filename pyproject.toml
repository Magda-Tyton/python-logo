[tool.poetry]
name = "python_logo"
version = "0.1.0"
description = "Python Logo interpreter with web-based frontend."
authors = [
  "YarynaRachkevych1 <rarynka28@gmail.com>",
  "mkalitka <mikolaj.kalitka@proton.me>",
  "Magda-Tyton <magdaeelna@gmail.com>",
  "weebik <krystian.samaa@gmail.com>"
]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
flask = "^3.0.3"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
ruff = "^0.7.1"
mypy = "^1.13.0"
pre-commit = "^4.0.1"

[tool.ruff]
target-version = "py310"
fix = true

[tool.ruff.lint]
select = [
  "ALL",
]
ignore = [
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D203", # 1 blank line required before class docstring
  "D212", # Multi-line docstring summary should start at the second line
  "COM812", # (formatter) Missing trailing comma in a tuple
  "ISC001", # (formatter) Implicitly concatenated string on a single line
  "T201" # TEMPORARY: `print` found
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
  "ANN", # flake8 annotations
  "INP001", # Implicit namespace package
  "D102", # Missing docstring in public method
  "D103", # Missing docstring in public function
  "S101" # Use of assert detected
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
